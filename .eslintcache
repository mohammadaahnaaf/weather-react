[{"D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\index.js":"1","D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\App.js":"2","D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\reportWebVitals.js":"3"},{"size":501,"mtime":1609405700709,"results":"4","hashOfConfig":"5"},{"size":2258,"mtime":1609406664646,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"9jkl6r",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\index.js",[],["17","18"],"D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\App.js",["19"],"import React, { useState } from 'react';\nimport {BsFillHeartFill} from \"react-icons/bs\";\n\nconst api = {\n  key : \"289708cbae6f4eb62ba2bfd168d47ca9\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  \n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&appid=${api.key}&units=metric`)\n       .then (res => res.json())\n       .then (result => {\n         setWeather(result);\n         setQuery('');\n         console.log(result);\n       });\n    }\n  } \n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.weather[0].main === \"Rain\") ? 'app rain' : '') || ((weather.main.temp > 20) ? 'app warm' : 'app')  : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n             type=\"text\"\n             className=\"search-bar\"\n             placeholder=\"Search Citys...\"\n             onChange= {e => setQuery(e.target.value)}\n             value={query}\n             onKeyPress={search}\n           />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n        <div className=\"location-box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n          <div className='date'>{dateBuilder(new Date())}</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 20) ? 'temp temp-warm' : 'temp')  : 'temp'}>\n            {Math.round(weather.main.temp)}Â°C\n          </div>\n          <div className=\"weather\"> {weather.weather[0].icon} {weather.weather[0].main}</div>\n        </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n",["20","21"],"D:\\All about Web Developement\\Projects Web Development\\Weather-api-react-app\\weather-react\\src\\reportWebVitals.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":2,"column":9,"nodeType":"28","messageId":"29","endLine":2,"endColumn":24},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'BsFillHeartFill' is defined but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]